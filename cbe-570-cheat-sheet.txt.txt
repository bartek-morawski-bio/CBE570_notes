CBE 570 Cheat Sheet

Pymol Worksheet:

Grabbing a protein structure from the database directly from the Protein Data Bank
	fetch <protein name>

Aligning two protein models
	align <name of movable thing>, <target>

Zooming in on a particular portion of the models
	orient resi <residue number>

Running external script from PyMOL
	load <script name>.pml

Creating a scene
	scene <name>, store

Creating a view
	view store

Reset view
	reset

Creating a fancy movie easily
	util.mroll(360, 10) # Rotates 360Â° over 10 sec
	mplay
	
How to get more fancy with your movie
	# begin by storing viewpoints
	view store, 1
	view store, 2
	
	# create and animate between views
	mset 1 x100  # Define 100-frame animation
	view store, 1  # Store first view
	
	# Change the camera manually
	view store, 2  # Store second view
	mplay  # Play the animation

	# more commands for defining camera movements
	# Store first view (zoomed-in)
	zoom
	mview store, 1  

	# Rotate and store second view
	turn y, 90
	mview store, 50

	# Zoom out and store third view
	zoom out
	mview store, 100
	
	# enable ray tracing for high quality rendering
	set ray_trace_frames, 1
	set ray_trace_mode, 1
	set ray_trace_dpi, 300
	set antialias, 2

	# Export movie
	mpng movie_frames/frame # saves each frame as png, have to convert into movie using external tool.

	# externally in terminal I think
	ffmpeg -r 30 -i movie_frames/frame%04d.png -vcodec libx264 -crf 20 -pix_fmt yuv420p fancy_movie.mp4
	# -r 30 -> sets fps to 30
	# -crf 20 -> controls quality (lower=better)




Modern style cartoon
	# Load a PDB structure
	# Show as cartoon
	hide everything
	show cartoon

	# Apply modern cartoon settings
	set cartoon_highlight_color, grey70 # Adds subtle shading for a modern look
	set cartoon_fancy_helices, 1 # Enables ribbon-like smooth helices instead of jagged ones.
	set cartoon_smooth_loops, 1 # Makes loop regions look more fluid and natural.
	set cartoon_side_chain_helper, 1 # Helps display side chains more clearly.

	# Optional: Color the helices for better visualization
	color red, ss h  # Helices
	color yellow, ss s  # Sheets
	color green, ss l+  # Loops

Add missing hydrogen atoms
	h_add
	h_add <molecule/chain name>
	
	# Optimizing hydrogen placement
	h_add
	remove hydro
	h_add

Modeling amino acid mutations
	wizard mutagenesis # opens mutagenesis wizard
	# Select the residue you want to mutate.
	# Choose new amino acid from dropdown menu
	# Click "Apply" to make the mutation
	
	# Using PyMOL Commands
	alter (resi 50 and chain A), resn="ARG" # Changes residue 50 in chain A to Arginine (ARG)
	rebuild





Command Line Worksheet:

Logging into the server
	MobaXterm
	Hostname: snow-gpu.engr.colostate.edu
	user: cbe570
	password: proteins 2025
	
	Terminal connect
	ssh cbe@snow-gpu.engr.colostate.edu

Lists content
	ls
	ls -ltr # one item per line with most recently changed files last
	l # different view from "ls" command, gives time of file modification

See current directory
	pwd

Make new directory
	mkdir <name>

Change directories
	cd <filepath> # with no specified file path takes you back to home directory
	cd .. # go back a directory
	cd ~ # change directory to the home directory

Commands for inspecting contents of text file
	more # one page at a time
	*spacebar* or *arrow keys* # move around the "more" view
	cat # view whole file
	head -n <number of lines> <file name> # displays first couple lines
	tail -n <number of lines> <file name> # displays last couple lines

Editing a text file
	nano <filename> # simpler better for beginners
	vim <filename> # more powerful but less intuitive
	*esc*:q! # quit vim without saving
	*esc*:wq # save changes and quit

Key to quit
	q

Stop most Linux processes
	*ctrl c*

Copying a file
	cp <source> <destination>

Move file
	mv # same arguments as cp command

Remove file
	rm <filename>
	rm -r <dir name> # removes whole directory

Multiple files at once
	gen*.py # will effect all files that start with "gen" and end with ".py"
	gen?.py # will effect all files with "?" corresponding to any one character.

Look at history of recent commands
	history

Most recent command
	*up arrow*

Running a python script
	python <name>.py

Running python interactively
	ipython





More Commands from HW1.Q2:

Dr. Snow's helper command for pulling files from remote server to local machine
	pull <target_file_or_folder>

Push a directory/folder to a remote host server
	scp -r <sourcepath> <username>@remotehost.engr.colostate.edu:<destination path>

Push a file copy to a remote host server
	scp <sourcepath> username@remotehost.engr.colostate.edu:<remotepath>

Pull a file from the remote server to your local machine
	scp <username>@<hostname>.<domain>:<path/to/remote/file> <path/to/local/file>

Prevent the server from stopping a job when the login shell stops
	nohup <normal command here>

See how busy the computer is "task manager"
	top

See how busy a NVIDIA gpu is
	nvidia-smi








































